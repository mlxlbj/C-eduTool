栈和队列
	一种特殊线性表 一对一关系
	
栈：memset  
	先进后出
	
	通过操作栈顶指针来操作栈
	大小：
		max
	满栈：
		top == max
	空栈：
		top == 0
	入栈：保存数据到栈中
	弹栈：从栈中取出数据

队列： 循环队列
	先进先出

	大小：
	队头：a
	队尾：b
	入队：
		end
	出队：
		front
	数据个数


==================================
排序：
	交换排序：或者是选择排序变种
		取出一个数据， 跟后面所有的数据比较，如果满足条件则交换
		由取出第二个数跟后面所有的数据比较，以此类推。

	冒泡排序：
		相邻两个数进行比较，小数上浮 大数沉底 => max =>end
		依次类推

	选择排序
		默认第一个数据为最小值， (取出最小值的小标的数据跟后面所有的数据比较)， 如果满足条件则保存这个数的小标，第一遍循环结束后，则把最小值小标的数据跟第一个数据交换。
		下来又取出第二个数，默认为最小值，依次类推。

	插入排序
		取出第二个数跟前面的数据比较，如果满足条件则把前一个给后一个，如果不满足条件则退出，并保存这个数据到当前位置，依次类推 。。。

	快速排序
	void qsort(void *base, size_t nmemb, size_t size,
	                  int(*compar)(const void *, const void *));

	第一个参数：表示数据空间地址
	第二个参数：表示数据个数
	第三个参数：表示数据类型
	第四个参数：表示比较函数

		
查找：	
	一般查找法
	二分查找法 ： 排序

	void *bsearch(const void *key, const void *base, size_t nmemb,
	              size_t size, int (*compar)(const void *, const void *));

	第一个参数：表示关键字
	第二个参数：表示数据空间地址
	第三个参数：表示数据长度
	第四个参数：表示数据类型
	第五个参数：表示比较函数
	返回值：
		成功：返回查找到数据空间地址
		失败：NULL



















