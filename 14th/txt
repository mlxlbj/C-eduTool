排序 查找 哈希
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝


树：
	空树：
	圆圈和直线来表示
	圆圈表示数据
	直线表示数据之间关系

	根节点 ：无父节点节点就是根节点
	父节点：
	子节点：
	祖先节点：
	子孙节点：
	兄弟节点：父节点是同一个节点子节点就是兄弟节点
	表兄节点：
	叶子节点：没有子节点节点就是叶子节点

	森林：n个树就组成森林
二叉树： 最多只有两个节点的树就是二叉树
	左子树：
	右子树：

	树深度：	depth
	树节点个数	count

	满二叉树：如果树深度是depth
		count = 2^depth - 1

	完全二叉树：
		1 : count = 2^(depth - 1) - 1
		2 : 第depth层，节点必须是从右到左的依次减少
	平衡二叉树：
		1 ： 每一个节点左子树深度和右子树深度的绝对值差值应该小于等于1

	数据操作方法：
	所有右子树的数据最小值也比左子树最大值都要大

	遍历：
		前序：中左右
		中序：左中右
		后序：左右中

	1 练习：
	*
	* *
	* * *
	* * * *
	* * * * *
	1 实现汉诺塔

	VT


	1 实现一个安装进度条
		======>     50%
		=> 					5%
		==> 				10%
		===>				15%
	2 实现密码输入
		input passwd : 

		printf("passwd : ");



























